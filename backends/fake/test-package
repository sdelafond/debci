#!/usr/bin/ruby

require 'fileutils'
require 'stringio'

log = StringIO.new
log.puts 'command line arguments: ' + ARGV.join(' ')

if ARGV.length < 2
  $stderr.puts "usage: test-package [OPTIONS] PACKAGE OUTPUTDIR [EXTRA-AUTOPKGTEST-ARGS]"
  exit 1
end

pkg = ARGV.shift
outdir = ARGV.shift

ARGV.each do |a|
  log.puts "W: ignoring extra argument: " + a
end

FileUtils.mkdir(outdir)
if ENV["DEBCI_FAKE_DEPS"]
  File.open(File.join(outdir, 'foo0t-mytest-packages'), 'w') do |f|
    ENV["DEBCI_FAKE_DEPS"].split('|').each do |line|
      f.puts line.gsub(" ", "\t")
    end
  end
end

version = `(apt-cache showsrc #{pkg} | grep-dctrl -n -s Version '' | head -1) 2>/dev/null`
if version == ''
  version = `date +0.0.0-1~%Y%M%d`.strip
end
File.open(File.join(outdir, 'testpkg-version'), 'w') { |f| f.puts version }

if ENV["DEBCI_FAKE_COMMAND"]
  io = IO.popen(ENV["DEBCI_FAKE_COMMAND"])
  log.puts [ '$ ' + ENV['DEBCI_FAKE_COMMAND'], io.read]
  io.close
  rc = $?.exitstatus
  if rc != 0
    rc = 4
  end
else
  log.puts "Not really running anything .."
  log.puts "This has 80% chance of passing, 10% of failing, and 10% of tmpfailing"
  r = nil
  case ENV['DEBCI_FAKE_RESULT']
  when 'pass'
    r = 0
  when 'fail'
    r = 8
  when 'tmpfail'
    r = 9
  else
    r = rand(10)
  end

  case r
  when 0..7
    log.puts "Passed :-)"
    rc = 0
  when 8
    log.puts "Failed :-("
    rc = 4
  when 9
    log.puts "Some error ocurred"
    rc = 16
  end
end

if ENV["DEBCI_FAKE_KILLPARENT"]
  # find our parent which is the t
  p = Process.pid
  while p > 1
    File.open("/proc/#{p}/stat") do |f|
      stat = f.gets.split()
      if stat[1].include? ENV["DEBCI_FAKE_KILLPARENT"]
        # got it, kill that
        Process.kill('FPE', p)
        p = -1
      else
        p = Integer(stat[3])
      end
    end
  end
end

log.puts "autopkgtest [%s]: finished\n" % Time.now.strftime('%Y-%m-%d %H:%M:%S')

File.open(File.join(outdir, 'log'), 'w') do |f|
  f.puts log.string
end
File.open(File.join(outdir, 'exitcode'), 'w') do |f|
  f.puts rc
end
puts log.string
exit rc
