#!/bin/sh

set -eu
short_options='t:p:i:'
long_options='trigger:,pin-packages:,run-id:'

usage() {
  cat <<EOF
usage: debci enqueue [PKG [PKG ...]]
Options:
  -t=TRIGGER, --trigger=TRIGGER
      Associate TRIGGER as the trigger for the requested test run.  TRIGGER is
      a treated as string, has no special meaning for debci, but can be
      retrieved later as part of the test run metadata
  -p RELEASE=pkgname,src:srcname,...
  --pin-packages RELEASE=pkgname,src:srcname,...
      Force specific packages to be installed from the given RELEASE. The
      format is the same as the --pin-packages option from autopkgtest. RELEASE
      will be automatically addded to the testbed APT sources.
  -i ID, --run-id ID
      Use the specific ID as the run id for the test runs, instead of
      generating one based on the current date.
$@
EOF
}

debci_base_dir=$(readlink -f $(dirname $(readlink -f $0))/..)
. $debci_base_dir/lib/environment.sh
. $debci_base_dir/lib/functions.sh

trigger=""
pin_packages=""
run_id=""

while true; do
  opt="$1"
  shift
  case "$opt" in
    -t|--trigger)
      trigger="$1"
      shift
      ;;
    -p|--pin-packages)
      pin_packages="$pin_packages $1"
      shift
      ;;
    -i|--run-id)
      run_id="$1"
      if echo "$run_id" | grep -q '^[0-9]\{8\}_[0-9]\{6\}$' ; then
        : ok
      else
        echo "E: invalid run-id: $run_id (format needs to be YYYYMMDD_HHMMSS)"
        exit 1
      fi
      shift
      ;;
    --)
      break
      ;;
  esac
done

if [ -n "$trigger" ]; then
  parameters="trigger:$trigger"
else
  parameters=""
fi
if [ -n "$run_id" ]; then
  parameters="$parameters run-id:$run_id"
fi
for p in $pin_packages; do
  parameters="$parameters pin-packages:$p"
done

for pkg in $@; do
  amqp-publish \
    --url "${debci_amqp_server}" \
    --persistent \
    --routing-key "$debci_amqp_queue" \
    --body "$pkg $debci_suite $parameters"
  report_status "$pkg" "requested"
done
